@page "/test"
@using BrightApricot.Client.Interfaces
@using BrightApricot.Shared.Models
@inject IRecipeHandler RecipeHandler

<Titlebar Title="@_title" 
          @ref="_titlebar"/>

@if (_selectedRecipe == null)
{
    <RecipeListView 
        Recipes="_recipes"
        OnRecipeSelected="SelectRecipe"/>
}
    
@if (_selectedRecipe != null)
{
    <RecipeView ViewRecipe="@_selectedRecipe"/>
    
}


<BottomMenu />

@code
{
    private IEnumerable<Recipe> _recipes = new List<Recipe>();
    private Recipe _selectedRecipe;

    private string _title = "RecipeList";

    private Titlebar _titlebar;

    protected void SelectRecipe(Recipe recipe)
    {
        if (recipe == null)
            return;
        _selectedRecipe = recipe;
        UpdateTitle();
    }

    protected void UnselectRecipe()
    {
        _selectedRecipe = null;
        UpdateTitle();
    }

    private void UpdateTitle()
    {
        _title = _selectedRecipe == null ? "RecipeList" : "RecipeView";
        _titlebar.RefreshTitle();
    }

    protected override async Task OnInitializedAsync()
    {
        await RecipeHandler.BeginCommit();
        _recipes = RecipeHandler.Recipes;
    }
}
